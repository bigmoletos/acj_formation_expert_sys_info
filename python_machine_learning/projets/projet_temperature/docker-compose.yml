version: '3.8'

services:
  web:
    build: .
    container_name: temperature-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - DATABASE_URL=mysql+pymysql://user:password@db:3306/temperature_db
    volumes:
      - ./docs:/app/docs  # Montage du dossier de documentation
      - ./logs:/app/logs  # Montage du dossier de logs
    depends_on:
      - db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    container_name: temperature-db
    restart: always
    environment:
      MYSQL_DATABASE: temperature_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  adminer:
    image: adminer
    container_name: temperature-adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: temperature-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docs:/usr/share/nginx/html/docs  # Montage de la documentation
    depends_on:
      - web
    networks:
      - app-network

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge
